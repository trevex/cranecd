# Generated by 'make manifests'

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: '{{ .Release.Name }}-cranecd-leader-election-role'
  namespace: '{{ .Release.Namespace }}'
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: '{{ .Release.Name }}-cranecd-manager-role'
rules:
- apiGroups:
  - cranecd.kubism.io
  resources:
  - pipelines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cranecd.kubism.io
  resources:
  - pipelines/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: '{{ .Release.Name }}-cranecd-proxy-role'
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: '{{ .Release.Name }}-cranecd-metrics-reader'
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: '{{ .Release.Name }}-cranecd-leader-election-rolebinding'
  namespace: '{{ .Release.Namespace }}'
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: '{{ .Release.Name }}-cranecd-leader-election-role'
subjects:
- kind: ServiceAccount
  name: default
  namespace: '{{ .Release.Namespace }}'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: '{{ .Release.Name }}-cranecd-manager-rolebinding'
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: '{{ .Release.Name }}-cranecd-manager-role'
subjects:
- kind: ServiceAccount
  name: default
  namespace: '{{ .Release.Namespace }}'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: '{{ .Release.Name }}-cranecd-proxy-rolebinding'
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: '{{ .Release.Name }}-cranecd-proxy-role'
subjects:
- kind: ServiceAccount
  name: default
  namespace: '{{ .Release.Namespace }}'
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: '{{ .Release.Name }}-cranecd-controller-manager-metrics-service'
  namespace: '{{ .Release.Namespace }}'
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
